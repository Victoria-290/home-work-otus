package service

import (
	"math/rand"
	"strconv"
	"time"

	"github.com/Victoria-290/home-work-otus/Progect/internal/model/auth"
	"github.com/Victoria-290/home-work-otus/Progect/internal/model/task"
	"github.com/Victoria-290/home-work-otus/Progect/internal/model/user"
)

// StartGenerator создает сущности и отправляет их в канал с интервалом
func StartGenerator(ch chan<- EntityEvent) {
	var emailCounter, taskCounter int64 = 1, 1
	rand.Seed(time.Now().UnixNano())

	for {
		// Создаем пользователя
		u := user.NewUser(
			"user"+strconv.FormatInt(emailCounter, 10)+"@test.com",
			"pass123",
		)
		u.ID = emailCounter
		ch <- EntityEvent{Type: "user", Value: u}
		emailCounter++

		// Создаем задачу
		t := task.NewTask(
			"Task #"+strconv.FormatInt(taskCounter, 10),
			"Generated by generator",
			u.ID,
		)
		t.ID = taskCounter
		ch <- EntityEvent{Type: "task", Value: t}
		taskCounter++

		// Создаем токен
		token := &auth.Token{
			UserID:    u.ID,
			Token:     "some-jwt-token",
			ExpiresAt: time.Now().Add(time.Hour),
			IsRefresh: false,
		}
		ch <- EntityEvent{Type: "token", Value: token}

		time.Sleep(2 * time.Second)
	}
}
